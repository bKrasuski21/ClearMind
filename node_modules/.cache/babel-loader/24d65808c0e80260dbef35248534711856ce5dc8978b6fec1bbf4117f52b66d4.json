{"ast":null,"code":"var _jsxFileName = \"/Users/a993/Desktop/caffeineAPP/clear/ClearMind/src/components/TriggerTracker.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './TriggerTracker.css';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { doc, getDoc, updateDoc, setDoc } from 'firebase/firestore';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { dataBase } from '../config/firebase'; // Ensure you have the correct path to your Firebase config\nimport { collection, addDoc } from 'firebase/firestore';\nimport { format, startOfToday, add, endOfMonth, startOfMonth, eachDayOfInterval, isSameMonth, isToday, getDay, getDaysInMonth, getDaysInYear, isLeapYear } from 'date-fns';\nimport { auth, googleProvider } from '../config/firebase';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TriggerTrackerForm() {\n  _s();\n  var _location$state;\n  const [user, loading, error] = useAuthState(auth);\n  const navigate = useNavigate();\n  const location = useLocation(); // Get the location object\n\n  const date = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.date; // Access the date from the location state\n  const docRef = doc(dataBase, 'triggers', user.uid);\n  const [triggers, setTriggers] = useState({\n    migraine: '',\n    sleep: '',\n    food: '',\n    water: '',\n    exercise: '',\n    stress: '',\n    anxiety: '',\n    depression: '',\n    caffeine: '',\n    alcohol: '',\n    nicotine: '',\n    smell: '',\n    date: date\n  });\n  const placeholders = {\n    migraine: 'Scale 0-10',\n    sleep: 'Hours of sleep (e.g 8)',\n    food: 'Did you eat out?',\n    water: 'Number of cups',\n    exercise: 'Minutes of exercise',\n    stress: 'Scale 1-10',\n    anxiety: 'Scale 1-10',\n    depression: 'Scale 1-10',\n    caffeine: 'In MG',\n    alcohol: 'In number of shots',\n    nicotine: 'Yes / No ',\n    smell: 'Did you go to sephora?'\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setTriggers(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault(); // Prevent the default form submission behavior\n    const triggerDoc = await getDoc(docRef);\n    try {\n      // Adding the triggers data to Firestore\n\n      if (triggerDoc.exists()) {\n        const TriggerData = triggerdoc.data();\n      }\n      await updateDoc(docRef, {\n        TriggerData: triggers\n      });\n      navigate('/app'); // Navigate back to the app or to a confirmation page\n    } catch (e) {\n      console.error(\"Error adding document: \", e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"info-form\",\n    children: [Object.keys(triggers).map(key => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: key,\n        children: [key.charAt(0).toUpperCase() + key.slice(1), \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: key,\n        name: key,\n        value: triggers[key],\n        onChange: handleChange,\n        placeholder: placeholders[key]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)]\n    }, key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      onClick: handleSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n_s(TriggerTrackerForm, \"4HhNInmyj4J5bUmxkvAg9mzJK24=\", false, function () {\n  return [useAuthState, useNavigate, useLocation];\n});\n_c = TriggerTrackerForm;\nexport default TriggerTrackerForm;\nvar _c;\n$RefreshReg$(_c, \"TriggerTrackerForm\");","map":{"version":3,"names":["React","useState","useNavigate","useLocation","doc","getDoc","updateDoc","setDoc","useAuthState","dataBase","collection","addDoc","format","startOfToday","add","endOfMonth","startOfMonth","eachDayOfInterval","isSameMonth","isToday","getDay","getDaysInMonth","getDaysInYear","isLeapYear","auth","googleProvider","jsxDEV","_jsxDEV","TriggerTrackerForm","_s","_location$state","user","loading","error","navigate","location","date","state","docRef","uid","triggers","setTriggers","migraine","sleep","food","water","exercise","stress","anxiety","depression","caffeine","alcohol","nicotine","smell","placeholders","handleChange","e","name","value","target","prevState","handleSubmit","preventDefault","triggerDoc","exists","TriggerData","triggerdoc","data","console","onSubmit","className","children","Object","keys","map","key","htmlFor","charAt","toUpperCase","slice","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/a993/Desktop/caffeineAPP/clear/ClearMind/src/components/TriggerTracker.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './TriggerTracker.css';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { doc, getDoc, updateDoc, setDoc } from 'firebase/firestore';\nimport {useAuthState} from 'react-firebase-hooks/auth';\nimport { dataBase } from '../config/firebase';  // Ensure you have the correct path to your Firebase config\nimport { collection, addDoc } from 'firebase/firestore';\nimport { format, startOfToday, add, endOfMonth, startOfMonth, eachDayOfInterval, isSameMonth, isToday, getDay, getDaysInMonth, getDaysInYear, isLeapYear } from 'date-fns';\nimport { auth, googleProvider,  } from '../config/firebase';\n\nfunction TriggerTrackerForm() {\n    \n    const [user, loading, error] = useAuthState(auth);\n\n    const navigate = useNavigate();\n    const location = useLocation();  // Get the location object\n\n    const date = location.state?.date;  // Access the date from the location state\n    const docRef = doc(dataBase, 'triggers', user.uid);\n\n    const [triggers, setTriggers] = useState({\n        migraine: '',\n        sleep: '',\n        food: '',\n        water: '',\n        exercise: '',\n        stress: '',\n        anxiety: '',\n        depression: '',\n        caffeine: '',\n        alcohol: '',\n        nicotine: '',\n        smell: '',\n        date: date,\n\n    });\n\n    const placeholders = {\n        migraine: 'Scale 0-10',\n        sleep: 'Hours of sleep (e.g 8)',\n        food: 'Did you eat out?',\n        water: 'Number of cups',\n        exercise: 'Minutes of exercise',\n        stress: 'Scale 1-10',\n        anxiety: 'Scale 1-10',\n        depression: 'Scale 1-10',\n        caffeine: 'In MG',\n        alcohol: 'In number of shots',\n        nicotine: 'Yes / No ',\n        smell: 'Did you go to sephora?'\n\n    }\n\n    const handleChange = (e) => {\n        const { name, value } = e.target;\n        setTriggers(prevState => ({\n            ...prevState,\n            [name]: value\n        }));\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();  // Prevent the default form submission behavior\n        const triggerDoc = await getDoc(docRef);\n        try {\n            // Adding the triggers data to Firestore\n            \n            if(triggerDoc.exists()){\n                const TriggerData = triggerdoc.data();\n            }\n\n            await updateDoc(docRef, {\n                TriggerData: triggers\n            });\n            navigate('/app');  // Navigate back to the app or to a confirmation page\n        } catch (e) {\n            console.error(\"Error adding document: \", e);\n        }\n    };\n\n    \n    return (\n        <form onSubmit={handleSubmit} className=\"info-form\">\n            {Object.keys(triggers).map(key => (\n                <div key={key} className=\"form-row\">\n                    <label htmlFor={key}>{key.charAt(0).toUpperCase() + key.slice(1)}:</label>\n                    <input\n                        type=\"text\"\n                        id={key}\n                        name={key}\n                        value={triggers[key]}\n                        onChange={handleChange}\n                        placeholder={placeholders[key]}\n                    />\n                </div>\n            ))}\n            <button type=\"submit\" onClick={handleSubmit}>Submit</button>\n        </form>\n    );\n}\n\nexport default TriggerTrackerForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}